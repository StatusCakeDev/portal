"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[116],{5680:(e,r,t)=>{t.d(r,{xA:()=>c,yg:()=>g});var n=t(6540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),m=a,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return t?n.createElement(g,i(i({ref:r},c),{},{components:t})):n.createElement(g,i({ref:r},c))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5932:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=t(8168),a=(t(6540),t(5680));const o={id:"errors",title:"Errors",description:"Learn how handle API errors"},i=void 0,s={unversionedId:"api/errors",id:"api/errors",title:"Errors",description:"Learn how handle API errors",source:"@site/guides/api/errors.md",sourceDirName:"api",slug:"/api/errors",permalink:"/guides/api/errors",draft:!1,editUrl:"https://github.com/StatusCakeDev/portal/edit/master/guides/api/errors.md",tags:[],version:"current",lastUpdatedAt:1751364381,formattedLastUpdatedAt:"Jul 1, 2025",frontMatter:{id:"errors",title:"Errors",description:"Learn how handle API errors"},sidebar:"guides",previous:{title:"Ratelimiting",permalink:"/guides/api/ratelimiting"},next:{title:"Parameters",permalink:"/guides/api/parameters"}},l={},p=[{value:"Handling Errors",id:"handling-errors",level:2},{value:"Next Steps",id:"next-steps",level:2}],c={toc:p},u="wrapper";function d(e){let{components:r,...t}=e;return(0,a.yg)(u,(0,n.A)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"The StatusCake API uses conventional HTTP response codes to indicate the success\nor failure of an API request. In general: Codes in the ",(0,a.yg)("inlineCode",{parentName:"p"},"2xx")," range indicate\nsuccess; codes in the ",(0,a.yg)("inlineCode",{parentName:"p"},"4xx")," range indicate a request that failed given the\ninformation provided (e.g. a required parameter was omitted or malformed); and\ncodes in the ",(0,a.yg)("inlineCode",{parentName:"p"},"5xx")," range indicate an error with StatusCake servers."),(0,a.yg)("h2",{id:"handling-errors"},"Handling Errors"),(0,a.yg)("p",null,"Errors should be handled appropriately, depending upon the value of the HTTP\nstatus code returned from the API. For example if we wanted to email a member of\nthe DevOps team when an uptime check is missing from our monitoring suite we\ncould write the following script:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Alert on missing uptime check" showLineNumbers',title:'"Alert',on:!0,missing:!0,uptime:!0,'check"':!0,showLineNumbers:!0},'status_code=$(\n  curl -s https://api.statuscake.com/v1/uptime/123 \\\n    -H "Authorization: Bearer <token>" \\\n    --write-out %{http_code} \\\n    --output /dev/null\n)\n\nif [[ "$status_code" -eq 404 ]] ; then\n  echo "Uptime check (ID: 123) does not exist" | mail -s "Missing uptime check" devops@example.com\nelse\n  exit 0\nfi\n')),(0,a.yg)("h2",{id:"next-steps"},"Next Steps"),(0,a.yg)("p",null,"Learn how to handle input parameters and avoid some common pitfalls when\ncreating monitoring resources."))}d.isMDXComponent=!0}}]);