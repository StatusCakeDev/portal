"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[473],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),f=c(a),m=r,k=f["".concat(s,".").concat(m)]||f[m]||p[m]||l;return a?n.createElement(k,o(o({ref:t},u),{},{components:a})):n.createElement(k,o({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}f.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(67294),r=a(86010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>m});var n=a(87462),r=a(67294),l=a(86010),o=a(72389),i=a(67392),s=a(7094),c=a(12466);const u="tabList__CuJ",p="tabItem_LNqP";function f(e){var t,a;const{lazy:o,block:f,defaultValue:m,values:k,groupId:b,className:d}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=k?k:g.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),h=(0,i.l)(v,((e,t)=>e.value===t.value));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===m?m:null!=(t=null!=m?m:null==(a=g.find((e=>e.props.default)))?void 0:a.props.value)?t:g[0].props.value;if(null!==y&&!v.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+v.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:T,setTabGroupChoices:N}=(0,s.U)(),[C,x]=(0,r.useState)(y),B=[],{blockElementScrollPositionUntilNextRender:w}=(0,c.o5)();if(null!=b){const e=T[b];null!=e&&e!==C&&v.some((t=>t.value===e))&&x(e)}const E=e=>{const t=e.currentTarget,a=B.indexOf(t),n=v[a].value;n!==C&&(w(t),x(n),null!=b&&N(b,String(n)))},D=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{var n;const t=B.indexOf(e.currentTarget)+1;a=null!=(n=B[t])?n:B[0];break}case"ArrowLeft":{var r;const t=B.indexOf(e.currentTarget)-1;a=null!=(r=B[t])?r:B[B.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":f},d)},v.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:e=>B.push(e),onKeyDown:D,onFocus:E,onClick:E},o,{className:(0,l.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":C===t})}),null!=a?a:t)}))),o?(0,r.cloneElement)(g.filter((e=>e.props.value===C))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==C})))))}function m(e){const t=(0,o.Z)();return r.createElement(f,(0,n.Z)({key:String(t)},e))}},49682:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var n=a(87462),r=(a(67294),a(3905)),l=a(65488),o=a(85162);const i={id:"backoff",title:"Backoff Strategies",description:"Learn about the available backoff strategies for request retries"},s=void 0,c={unversionedId:"sdks/backoff",id:"sdks/backoff",title:"Backoff Strategies",description:"Learn about the available backoff strategies for request retries",source:"@site/guides/sdks/backoff.md",sourceDirName:"sdks",slug:"/sdks/backoff",permalink:"/guides/sdks/backoff",draft:!1,editUrl:"https://github.com/StatusCakeDev/portal/tree/master/guides/sdks/backoff.md",tags:[],version:"current",lastUpdatedAt:1664751282,formattedLastUpdatedAt:"Oct 2, 2022",frontMatter:{id:"backoff",title:"Backoff Strategies",description:"Learn about the available backoff strategies for request retries"},sidebar:"guides",previous:{title:"Configuration",permalink:"/guides/sdks/configuration"},next:{title:"Alpha Releases",permalink:"/guides/sdks/alpha"}},u={},p=[{value:"Constant Backoff",id:"constant-backoff",level:2},{value:"Exponential Backoff",id:"exponential-backoff",level:2},{value:"Linear Backoff",id:"linear-backoff",level:2}],f={toc:p};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"When a request fails it may be desirable to retry the request in the future.\nFor this the SDKs employ a couple of strategies to give the best chance of a\nsuccessful request."),(0,r.kt)("h2",{id:"constant-backoff"},"Constant Backoff"),(0,r.kt)("p",null,"A constant backoff applies a fixed period of time between each failed request."),(0,r.kt)(l.Z,{groupId:"languages",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Constant Backoff" showLineNumbers {4,7,15-17}',title:'"Constant','Backoff"':!0,showLineNumbers:!0,"{4,7,15-17}":!0},'package main\n\nimport (\n  "time"\n\n  "github.com/StatusCakeDev/statuscake-go"\n  "github.com/StatusCakeDev/statuscake-go/backoff"\n  "github.com/StatusCakeDev/statuscake-go/credentials"\n)\n\nfunc main() {\n  bearer := credentials.NewBearerWithStaticToken("my-api-token")\n  client := statuscake.NewClient(\n    statuscake.WithRequestCredentials(bearer),\n    statuscake.WithBackoff(backoff.Constant{\n      BaseDelay: time.Duration(5) * time.Second,\n    }),\n  )\n}\n'))),(0,r.kt)(o.Z,{value:"javascript",label:"JavaScript (alpha)",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Constant Backoff"',title:'"Constant','Backoff"':!0},"Currently Unavailable\n"))),(0,r.kt)(o.Z,{value:"python",label:"Python (alpha)",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="Constant Backoff"',title:'"Constant','Backoff"':!0},"Currently Unavailable\n"))),(0,r.kt)(o.Z,{value:"ruby",label:"Ruby (alpha)",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby",metastring:'title="Constant Backoff"',title:'"Constant','Backoff"':!0},"Currently Unavailable\n")))),(0,r.kt)("h2",{id:"exponential-backoff"},"Exponential Backoff"),(0,r.kt)("p",null,"An exponential backoff applies an exponential function on the time between each\nfailed request."),(0,r.kt)(l.Z,{groupId:"languages",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Exponential Backoff" showLineNumbers {4,7,15-20}',title:'"Exponential','Backoff"':!0,showLineNumbers:!0,"{4,7,15-20}":!0},'package main\n\nimport (\n  "time"\n\n  "github.com/StatusCakeDev/statuscake-go"\n  "github.com/StatusCakeDev/statuscake-go/backoff"\n  "github.com/StatusCakeDev/statuscake-go/credentials"\n)\n\nfunc main() {\n  bearer := credentials.NewBearerWithStaticToken("my-api-token")\n  client := statuscake.NewClient(\n    statuscake.WithRequestCredentials(bearer),\n    statuscake.WithBackoff(backoff.Exponential{\n      BaseDelay:  time.Duration(1) * time.Second,\n      Multiplier: 2.0,\n      Jitter:     0.2,\n      MaxDelay:   time.Duration(30) * time.Second,\n    }),\n  )\n}\n'))),(0,r.kt)(o.Z,{value:"javascript",label:"JavaScript (alpha)",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Exponential Backoff"',title:'"Exponential','Backoff"':!0},"Currently Unavailable\n"))),(0,r.kt)(o.Z,{value:"python",label:"Python (alpha)",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="Exponential Backoff"',title:'"Exponential','Backoff"':!0},"Currently Unavailable\n"))),(0,r.kt)(o.Z,{value:"ruby",label:"Ruby (alpha)",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby",metastring:'title="Exponential Backoff"',title:'"Exponential','Backoff"':!0},"Currently Unavailable\n")))),(0,r.kt)("h2",{id:"linear-backoff"},"Linear Backoff"),(0,r.kt)("p",null,"Linear backoff applies a linear functions on the time between each failed\nrequest."),(0,r.kt)(l.Z,{groupId:"languages",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Linear Backoff" showLineNumbers {4,7,15-20}',title:'"Linear','Backoff"':!0,showLineNumbers:!0,"{4,7,15-20}":!0},'package main\n\nimport (\n  "time"\n\n  "github.com/StatusCakeDev/statuscake-go"\n  "github.com/StatusCakeDev/statuscake-go/backoff"\n  "github.com/StatusCakeDev/statuscake-go/credentials"\n)\n\nfunc main() {\n  bearer := credentials.NewBearerWithStaticToken("my-api-token")\n  client := statuscake.NewClient(\n    statuscake.WithRequestCredentials(bearer),\n    statuscake.WithBackoff(backoff.Linear{\n      BaseDelay:  time.Duration(1) * time.Second,\n      Jitter:     0.2,\n      MaxDelay:   time.Duration(30) * time.Second,\n    }),\n  )\n}\n'))),(0,r.kt)(o.Z,{value:"javascript",label:"JavaScript (alpha)",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Linear Backoff"',title:'"Linear','Backoff"':!0},"Currently Unavailable\n"))),(0,r.kt)(o.Z,{value:"python",label:"Python (alpha)",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="Linear Backoff"',title:'"Linear','Backoff"':!0},"Currently Unavailable\n"))),(0,r.kt)(o.Z,{value:"ruby",label:"Ruby (alpha)",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby",metastring:'title="Linear Backoff"',title:'"Linear','Backoff"':!0},"Currently Unavailable\n")))))}m.isMDXComponent=!0}}]);