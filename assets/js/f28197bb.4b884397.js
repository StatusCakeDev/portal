"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[145],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),u=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=u(a),d=r,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||i;return a?n.createElement(f,s(s({ref:t},c),{},{components:a})):n.createElement(f,s({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var u=2;u<i;u++)s[u]=a[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>s});var n=a(67294),r=a(86010);const i="tabItem_Ymn6";function s(e){let{children:t,hidden:a,className:s}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,s),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>d});var n=a(87462),r=a(67294),i=a(86010),s=a(72389),o=a(67392),l=a(7094),u=a(12466);const c="tabList__CuJ",p="tabItem_LNqP";function m(e){var t,a;const{lazy:s,block:m,defaultValue:d,values:f,groupId:k,className:b}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=f?f:h.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),v=(0,o.l)(g,((e,t)=>e.value===t.value));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===d?d:null!=(t=null!=d?d:null==(a=h.find((e=>e.props.default)))?void 0:a.props.value)?t:h[0].props.value;if(null!==y&&!g.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+g.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:C,setTabGroupChoices:w}=(0,l.U)(),[N,T]=(0,r.useState)(y),S=[],{blockElementScrollPositionUntilNextRender:x}=(0,u.o5)();if(null!=k){const e=C[k];null!=e&&e!==N&&g.some((t=>t.value===e))&&T(e)}const D=e=>{const t=e.currentTarget,a=S.indexOf(t),n=g[a].value;n!==N&&(x(t),T(n),null!=k&&w(k,String(n)))},O=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{var n;const t=S.indexOf(e.currentTarget)+1;a=null!=(n=S[t])?n:S[0];break}case"ArrowLeft":{var r;const t=S.indexOf(e.currentTarget)-1;a=null!=(r=S[t])?r:S[S.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":m},b)},g.map((e=>{let{value:t,label:a,attributes:s}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>S.push(e),onKeyDown:O,onFocus:D,onClick:D},s,{className:(0,i.Z)("tabs__item",p,null==s?void 0:s.className,{"tabs__item--active":N===t})}),null!=a?a:t)}))),s?(0,r.cloneElement)(h.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function d(e){const t=(0,s.Z)();return r.createElement(m,(0,n.Z)({key:String(t)},e))}},32124:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var n=a(87462),r=(a(67294),a(3905)),i=a(65488),s=a(85162);const o={id:"configuration",title:"Configuration",description:"Learn how configure StatusCake software development kits"},l=void 0,u={unversionedId:"sdks/configuration",id:"sdks/configuration",title:"Configuration",description:"Learn how configure StatusCake software development kits",source:"@site/guides/sdks/configuration.md",sourceDirName:"sdks",slug:"/sdks/configuration",permalink:"/guides/sdks/configuration",draft:!1,editUrl:"https://github.com/StatusCakeDev/portal/edit/master/guides/sdks/configuration.md",tags:[],version:"current",lastUpdatedAt:1664803743,formattedLastUpdatedAt:"Oct 3, 2022",frontMatter:{id:"configuration",title:"Configuration",description:"Learn how configure StatusCake software development kits"},sidebar:"guides",previous:{title:"Installation",permalink:"/guides/sdks/installation"},next:{title:"Backoff Strategies",permalink:"/guides/sdks/backoff"}},c={},p=[{value:"Authentication",id:"authentication",level:2},{value:"Request Retries",id:"request-retries",level:2},{value:"Backoff",id:"backoff",level:3},{value:"Disable Retries",id:"disable-retries",level:3}],m={toc:p};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"With the module initialised, the StatusCake provider can be configured."),(0,r.kt)("h2",{id:"authentication"},"Authentication"),(0,r.kt)("p",null,"The StatusCake Terraform provider requires that an API bearer token be included\nin the provider configuration block. You can view and manage your API tokens\nfrom the ",(0,r.kt)("a",{parentName:"p",href:"https://app.statuscake.com/User.php"},"StatusCake account panel"),"."),(0,r.kt)("admonition",{title:"note",type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"API tokens must be kept private. In the event that one is exposed a new one\nshould be generated.")),(0,r.kt)(i.Z,{groupId:"languages",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Create a Client" showLineNumbers',title:'"Create',a:!0,'Client"':!0,showLineNumbers:!0},'package main\n\nimport (\n  "github.com/StatusCakeDev/statuscake-go"\n  "github.com/StatusCakeDev/statuscake-go/credentials"\n)\n\nfunc main() {\n  bearer := credentials.NewBearerWithStaticToken("my-api-token")\n  client := statuscake.NewClient(statuscake.WithRequestCredentials(bearer))\n}\n'))),(0,r.kt)(s.Z,{value:"javascript",label:"JavaScript (alpha)",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Create a Client" showLineNumbers',title:'"Create',a:!0,'Client"':!0,showLineNumbers:!0},"import 'isomorphic-fetch';\nimport {\n  Configuration,\n} from '@statuscake/statuscake-js';\n\nconst config = new Configuration({\n  headers: {\n    'Authorization': `Bearer ${apiToken}`,\n  },\n});\n"))),(0,r.kt)(s.Z,{value:"python",label:"Python (alpha)",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="Create a Client" showLineNumbers',title:'"Create',a:!0,'Client"':!0,showLineNumbers:!0},"from statuscake import ApiClient\n\nclient = ApiClient(\n  header_name='Authorization',\n  header_value='Bearer %s' % api_token,\n)\n"))),(0,r.kt)(s.Z,{value:"ruby",label:"Ruby (alpha)",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby",metastring:'title="Create a Client" showLineNumbers',title:'"Create',a:!0,'Client"':!0,showLineNumbers:!0},"require 'statuscake'\n\nclient = StatusCake::ApiClient.new\n\n# Constructing these options is a temporary fix until a client wide\n# authentication mechanism has been realised.\nopts = { header_params: { 'Authorization' => \"Bearer #{api_token}\" } }\n")))),(0,r.kt)("h2",{id:"request-retries"},"Request Retries"),(0,r.kt)("p",null,"When a request results in a transient error - an error that will resolve\nitself, i.e. connection error, or rate limit being hit - it may be desirable to\nretry the request in the future. For this the SDKs allow for each request to be\nretired up to some maximum number of times to give thea greater chance for\nsuccess."),(0,r.kt)(i.Z,{groupId:"languages",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Retry Attempts" showLineNumbers {12}',title:'"Retry','Attempts"':!0,showLineNumbers:!0,"{12}":!0},'package main\n\nimport (\n  "github.com/StatusCakeDev/statuscake-go"\n  "github.com/StatusCakeDev/statuscake-go/credentials"\n)\n\nfunc main() {\n  bearer := credentials.NewBearerWithStaticToken("my-api-token")\n  client := statuscake.NewClient(\n    statuscake.WithRequestCredentials(bearer),\n    statuscake.WithMaxRetries(3),\n  )\n}\n')))),(0,r.kt)("h3",{id:"backoff"},"Backoff"),(0,r.kt)("p",null,"By default request retry attempts are made using a constant backoff strategy\nwith a backoff period of 1 second. This may be configured to support alternate\nbackoff periods."),(0,r.kt)(i.Z,{groupId:"languages",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Constant Backoff" showLineNumbers {4,7,15-17}',title:'"Constant','Backoff"':!0,showLineNumbers:!0,"{4,7,15-17}":!0},'package main\n\nimport (\n  "time"\n\n  "github.com/StatusCakeDev/statuscake-go"\n  "github.com/StatusCakeDev/statuscake-go/backoff"\n  "github.com/StatusCakeDev/statuscake-go/credentials"\n)\n\nfunc main() {\n  bearer := credentials.NewBearerWithStaticToken("my-api-token")\n  client := statuscake.NewClient(\n    statuscake.WithRequestCredentials(bearer),\n    statuscake.WithBackoff(backoff.Constant{\n      BaseDelay: time.Duration(5) * time.Second,\n    }),\n  )\n}\n')))),(0,r.kt)("p",null,"The SDKs support other backoff strategies. These are detailed further in the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/sdks/backoff"},"backoff strategies")," guide."),(0,r.kt)("h3",{id:"disable-retries"},"Disable Retries"),(0,r.kt)("p",null,"Request retries can be disabled entirely for applications that do not require\nit."),(0,r.kt)(i.Z,{groupId:"languages",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Disbale Retries" showLineNumbers {12}',title:'"Disbale','Retries"':!0,showLineNumbers:!0,"{12}":!0},'package main\n\nimport (\n  "github.com/StatusCakeDev/statuscake-go"\n  "github.com/StatusCakeDev/statuscake-go/credentials"\n)\n\nfunc main() {\n  bearer := credentials.NewBearerWithStaticToken("my-api-token")\n  client := statuscake.NewClient(\n    statuscake.WithRequestCredentials(bearer),\n    statuscake.WithDisableRetry(),\n  )\n}\n')))),(0,r.kt)("h1",{id:"next-steps"},"Next Steps"),(0,r.kt)("p",null,"Next learn about the different request retry backoff strategies the SDKs\nsupport."))}d.isMDXComponent=!0}}]);